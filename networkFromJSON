#!/usr/bin/php -q
<?
$line=file_get_contents("php://stdin");

$e=json_decode($line,JSON_OBJECT_AS_ARRAY);

if ( JSON_ERROR_NONE !== json_last_error() ) {
	fputs(STDERR,"# error decoding input JSON string. Aborting...\n");
	exit(1);	
}




/* build /etc/network/interfaces file */
$nInterfaces=0;
$eni=array();
$eni[]="# /etc/network/interfaces generated by APRS World's networkFromJSON";
$eni[]="# source JSON: '$line'";
$eni[]="# this file is auto-generated. Manual changes will be overwritten at next boot.";
$eni[]="";

/* eth0 */
if ( isset($e['net']['interface']['eth0']['mode']) && 'client' == $e['net']['interface']['eth0']['mode']  ) {
	$nInterfaces++;

	/* make shorter $es name to access elements */
	$es=$e['net']['interface']['eth0'];

	/* stanza */
	if ( 'dhcp'==$es['configuration'] ) {
		/* DHCP mode */
		/* top of section */
		$eni[]='allow-auto eth0';
		$eni[]='iface eth0 inet dhcp';
	} else if ( 'static'==$es['configuration'] ) {
		/* static mode */
		/* top of section */
		$eni[]='allow-auto eth0';
		$eni[]='iface eth0 inet static';

		if ( '' != $es['ip'] ) 
			$eni[]=sprintf("\taddress %s",$es['ip']);

		if ( '' != $es['netmask'] ) 
			$eni[]=sprintf("\tnetmask %s",$es['netmask']);

		if ( '' != $es['gateway'] ) 
			$eni[]=sprintf("\tgateway %s",$es['gateway']);
	}
	
	/* add device specific nameservers, if we have any */
	if ( count($es['nameserver']) > 0 ) {
		$dns=implode(" ",$es['nameserver']);
		if ( strlen(trim($dns)) > 0 )
			$eni[]=sprintf("\tdns-nameservers %s",$dns);
	}

	$eni[]='';
}

/* wlan0 */
if ( isset($e['net']['interface']['wlan0']['mode']) && '' != $e['net']['interface']['wlan0']['mode'] && 'disabled' != $e['net']['interface']['wlan0']['mode'] ) {
	$nInterfaces++;

	/* make shorter $es name to access elements */
	$es=$e['net']['interface']['wlan0'];

	print_r($es);

	/* stanza */
	if ( 'dhcp'==$es['configuration'] ) {
		/* DHCP mode */
		/* top of section */
		$eni[]='allow-hotplug wlan0';
		$eni[]='allow-auto wlan0';
		$eni[]='iface wlan0 inet dhcp';
	} else if ( 'static'==$es['configuration'] ) {
		/* static mode */
		/* top of section */
		$eni[]='allow-hotplug wlan0';
		$eni[]='iface wlan0 inet static';

		if ( '' != $es['ip'] ) 
			$eni[]=sprintf("\taddress %s",$es['ip']);

		if ( '' != $es['netmask'] ) 
			$eni[]=sprintf("\tnetmask %s",$es['netmask']);

		if ( '' != $es['gateway'] ) 
			$eni[]=sprintf("\tgateway %s",$es['gateway']);
	}

	/* add device specific nameservers, if we have any */
	if ( isset($es['nameserver']) && count($es['nameserver']) > 0 ) {
		$dns=implode(" ",$es['nameserver']);
		if ( strlen(trim($dns)) > 0 )
			$eni[]=sprintf("\tdns-nameservers %s",$dns);
	}

	
	$eni[]="\t# wpa-supplicant options";
	$eni[]="\twpa-ap-scan 1";
	$eni[]="\twpa-scan-ssid 1";


	/* wpa ssid */
	if ( isset($es['ssid']) && '' != $es['ssid'] ) {
		$eni[]=sprintf("\twpa-ssid \"%s\"",$es['ssid']);
	}

	/* wpa psk */
	if ( isset($es['psk']) && '' != $es['psk'] ) {
		$eni[]=sprintf("\twpa-psk \"%s\"",$es['psk']);
	}

	$eni[]='';
}



$interfacesFile=implode("\n",$eni);

fprintf(STDERR,"# nInterfaces=%d\n",$nInterfaces);

/* write contents to argv[1] if we have at least one stanza */
if ( 2==$_SERVER['argc'] && $nInterfaces > 0 ) {
	fprintf(STDERR,"# writing interfaces file to '%s'\n",$_SERVER['argv'][1]);

	if ( FALSE === @file_put_contents($_SERVER['argv'][1],$interfacesFile) ) {
		fputs(STDERR,"# error writing interfaces file. Aborting...\n");
		exit(2);
	}
}


echo $interfacesFile;
?>
